@page "/VocabQuiz"
@inherits VocabQuizBase
@inject HttpClient Http

<PageTitle>Vocab Quiz</PageTitle>

<div class="VocabQuiz">
    <AccentBox AccentMenuHidden="@accentMenuHidden" OnClick="@OnAccentClicked" />

    <div class="VocabQuiz__header">
        <h2 id="VocabQuiz__module">@GLOBALS.selectedModuleName</h2>
    </div>

    <div class="VocabQuiz__bubble">
        <p id="VocabQuiz__vocab">@vocabQuiz.wordShownToUser</p>
    </div>

    <form onsubmit="return false" autocomplete="off">
        <div class="VocabQuiz__input">
            <input type="text" id="VocabQuiz__translation" disabled="@userInputDisabled" value="@vocabQuiz.userInput" @oninput="((e) => OnTextChange(e))" placeholder="Enter the translation..." autocomplete="off" />
            @if (displayTranslation) {
                <img class="correction-img" src="@( (isUserCorrect()) ? "images/tick.png" : "images/cross.png" )" />
            }
            <p id="VocabQuiz__correction">@correctTranslation</p>
        </div>
        <input type="submit" class="Quiz__submit" id="VocabQuiz__submit" @onclick="ResetVocab">@buttonLabels[buttonLabelIndex]</input>
    </form>
</div>

<TipBox />

@code {
    protected override async Task OnInitializedAsync()
    {
        vocabQuiz.moduleInfo = (await Http.GetStringAsync($"csv_files/{GLOBALS.selectedModuleName.ToLower()}Vocab.csv")).Split('\n');
        for (int i = 0; i < vocabQuiz.moduleInfo.Length; i++)
        {
            if (vocabQuiz.moduleInfo[i].Contains('\r'))
            {
                vocabQuiz.moduleInfo[i] = vocabQuiz.moduleInfo[i].Replace("\r", "");    
            }
        }
        vocabQuiz.RandomVocab();
    }

    public VocabQuizBase vocabQuiz = new VocabQuizBase();

    public string correctTranslation = string.Empty;

    public string[] buttonLabels = new string[2] { "Submit", "Next" };
    public int buttonLabelIndex = 0;
    public bool userInputDisabled = false;

    public bool displayTranslation = false;

    public bool accentMenuHidden = true;

    public void ResetVocab()
    {
        if (vocabQuiz.userInput != string.Empty)
        {
            // if SUBMIT button clicked
            if (buttonLabelIndex == 0)
            {
                buttonLabelIndex = 1;
                userInputDisabled = true;
                displayTranslation = true;
            }

            // if NEXT button clicked
            else
            {
                buttonLabelIndex = 0;
                userInputDisabled = false;

                vocabQuiz.RandomVocab();

                vocabQuiz.userInput = string.Empty;
                displayTranslation = false;
                correctTranslation = string.Empty;
            }
        }
    }

    public void OnTextChange(ChangeEventArgs args)
    {
        if (args.Value!.ToString() is not null)
        {
            vocabQuiz.userInput = args.Value.ToString()!;
        }

        if (vocabQuiz.userInput!.Length != 0)
        {
            if (vocabQuiz.userInput.Contains('#'))
            {
                accentMenuHidden = false;
                userInputDisabled = true;
            }
        }
    }

    public void OnAccentClicked(char accentClicked)
    {
        if (accentClicked == '#')
        {
            vocabQuiz.userInput = vocabQuiz.userInput.Replace("#", "");
        }
        else
        {
            vocabQuiz.userInput = vocabQuiz.userInput.Replace('#', accentClicked);
        }

        accentMenuHidden = true;
        userInputDisabled = false;
    }

    public bool isUserCorrect()
    {
        string[] correctTranslations;

        if (vocabQuiz.vocabInfo[1].Contains('/'))
        {
            correctTranslations = vocabQuiz.vocabInfo[1].Split('/');
        }
        else
        {
            correctTranslations = new string[1] { vocabQuiz.vocabInfo[1] };
        }

        if (correctTranslations.Any(x => x == vocabQuiz.userInput))
        {
            return true;
        }
        else
        {
            correctTranslation = vocabQuiz.vocabInfo[1];
            return false;
        }
    }
}
