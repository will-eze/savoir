@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@using Newtonsoft.Json
    
<NavMenu refreshBody="@RefreshMainContents" VerbConjugationsChanged="(args) => UpdateVerbConjugations(args)" VerbInfoChanged="(args) => UpdateVerbInfo(args)" />

<SearchGUI verbConjugations="@verbConjugations" verbInfo="@verbInfo"/>

<CascadingValue Value="@dummy">
    <main class="container">
        @Body
    </main>
</CascadingValue>

@code {
    int dummy = 0;

    public void RefreshMainContents()
    {
        dummy = dummy + 3;
        StateHasChanged();
    }


    public Dictionary<string, string[]> verbConjugations = new Dictionary<string, string[]>();
    public string[] verbInfo = Array.Empty<string>();
    public bool displaySearchGUI = false;

    public void UpdateVerbConjugations(Dictionary<string, string[]> _verbConjugations)
    {
        verbConjugations = _verbConjugations;
    }

    public void UpdateVerbInfo(string[] _verbInfo)
    {
        verbInfo = _verbInfo;
    }


    [JSInvokable]
    public static async void PageAboutToBeReloaded()
    {
        if (callLoadDataIntoStorage is not null)
        {
            await callLoadDataIntoStorage.Invoke();
        }
    }

    private static Func<Task>? callLoadDataIntoStorage;

    protected override void OnInitialized()
    {
        callLoadDataIntoStorage = LoadDataIntoStorage;
    }

    public async Task LoadDataIntoStorage()
    {
        await sessionStorage.SetItemAsync("possibleVerbs", JsonConvert.SerializeObject(GLOBALS.VerbsSelectedList));
        await sessionStorage.SetItemAsync("possibleTenses", JsonConvert.SerializeObject(GLOBALS.TensesSelectedList));
        await sessionStorage.SetItemAsync("possibleVocab", JsonConvert.SerializeObject(GLOBALS.PossibleVocabList));
    }
}

